{"ast":null,"code":"var _jsxFileName = \"/Users/madeleinebarr/Documents/engineering/gutenberg/client/src/components/AllBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Book from './Book'; // class AllBooks extends React.Component {\n//     render() {\n//         return (\n//             <Fragment>\n//             <p>Explore by subject -- Explore by time period -- explore by author</p>\n//             <h3>Top books:</h3>\n//             <div className=\"booklist\">\n//                 <ol>\n//                     <li>Frankstein by Marry Wollstonecraft Shelley</li>\n//                     <li>The Great Gatsby by F. Scott Fitzgerald</li>\n//                     <li>A Tale of Two Cities by Charles Dickens</li>\n//                 </ol>\n//             </div>\n//             </Fragment>\n//         )\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllBooks = props => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const booksendpoint = \"http://localhost:8000/books\";\n\n  const getBooks = async () => {\n    try {\n      let response = await fetch(booksendpoint);\n      const jsonData = await response.json();\n      setBooks(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(Book, {\n        title: book.title,\n        authors: book.authors,\n        id: book.id,\n        download_count: book.download_count\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllBooks, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = AllBooks;\nexport default AllBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllBooks\");","map":{"version":3,"sources":["/Users/madeleinebarr/Documents/engineering/gutenberg/client/src/components/AllBooks.js"],"names":["React","Fragment","useEffect","useState","Book","AllBooks","props","books","setBooks","booksendpoint","getBooks","response","fetch","jsonData","json","err","console","error","message","map","book","title","authors","id","download_count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMM,aAAa,GAAG,6BAAtB;;AAEA,QAAMC,QAAQ,GAAG,YAAY;AACzB,QAAI;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAD,CAA1B;AACA,YAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAN,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,KAJD,CAIE,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GARD;;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAA,gBACKH,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD;AAEA,QAAA,KAAK,EAAEA,IAAI,CAACC,KAFZ;AAGA,QAAA,OAAO,EAAED,IAAI,CAACE,OAHd;AAIA,QAAA,EAAE,EAAEF,IAAI,CAACG,EAJT;AAKA,QAAA,cAAc,EAAEH,IAAI,CAACI;AALrB,SACKJ,IAAI,CAACG,EADV;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAnCD;;GAAMlB,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport Book from './Book';\n\n// class AllBooks extends React.Component {\n//     render() {\n//         return (\n//             <Fragment>\n//             <p>Explore by subject -- Explore by time period -- explore by author</p>\n//             <h3>Top books:</h3>\n//             <div className=\"booklist\">\n//                 <ol>\n//                     <li>Frankstein by Marry Wollstonecraft Shelley</li>\n//                     <li>The Great Gatsby by F. Scott Fitzgerald</li>\n//                     <li>A Tale of Two Cities by Charles Dickens</li>\n//                 </ol>\n//             </div>\n//             </Fragment>\n//         )\n//     }\n// }\n\nconst AllBooks = (props) => {\n    const [books, setBooks] = useState([]);\n\n    const booksendpoint = \"http://localhost:8000/books\";\n\n    const getBooks = async () => {\n        try {\n            let response = await fetch(booksendpoint);\n            const jsonData = await response.json();\n            setBooks(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n        getBooks();\n    }, []);\n\n    return (\n        <Fragment>\n            <ol>\n                {books.map(book => (\n                    <Book\n                    key={book.id}\n                    title={book.title}\n                    authors={book.authors}\n                    id={book.id}\n                    download_count={book.download_count}\n                    />\n                    \n                ))}\n            </ol>\n        </Fragment>\n    )\n}\n\nexport default AllBooks;"]},"metadata":{},"sourceType":"module"}